AGENCIA = "0001"
LIMITE_SAQUES = 3

usuarios = []
contas = []

def sacar(*, saldo, valor, extrato, limite, numero_saques):
    if valor > saldo:
        print("‚ùå Saldo insuficiente.")
    elif valor > limite:
        print("‚ùå Valor excede o limite por saque.")
    elif numero_saques >= LIMITE_SAQUES:
        print("‚ùå N√∫mero m√°ximo de saques atingido.")
    elif valor > 0:
        saldo -= valor
        extrato += f"Saque:    R$ {valor:.2f}\n"
        numero_saques += 1
        print("‚úÖ Saque realizado com sucesso!")
    else:
        print("‚ö†Ô∏è Valor inv√°lido para saque.")
    return saldo, extrato, numero_saques

def depositar(saldo, valor, extrato, /):
    if valor > 0:
        saldo += valor
        extrato += f"Dep√≥sito: R$ {valor:.2f}\n"
        print("‚úÖ Dep√≥sito realizado com sucesso!")
    else:
        print("‚ö†Ô∏è Valor inv√°lido para dep√≥sito.")
    return saldo, extrato

def exibir_extrato(saldo, /, *, extrato):
    print("\n===== EXTRATO =====")
    print("Sem movimenta√ß√µes." if not extrato else extrato)
    print(f"\nSaldo atual: R$ {saldo:.2f}")
    print("====================")

def cadastrar_usuario():
    cpf = input("Informe o CPF (somente n√∫meros): ").strip()
    if any(u["cpf"] == cpf for u in usuarios):
        print("‚ö†Ô∏è J√° existe usu√°rio com esse CPF.")
        return

    nome = input("Nome completo: ").strip()
    nascimento = input("Data de nascimento (dd/mm/aaaa): ").strip()
    endereco = input("Endere√ßo (logradouro, nro, bairro, cidade/UF): ").strip()

    usuarios.append({
        "nome": nome,
        "nascimento": nascimento,
        "cpf": cpf,
        "endereco": endereco
    })
    print("‚úÖ Usu√°rio cadastrado com sucesso!")

def encontrar_usuario(cpf):
    for usuario in usuarios:
        if usuario["cpf"] == cpf:
            return usuario
    return None

def cadastrar_conta():
    cpf = input("CPF do titular da conta: ").strip()
    usuario = encontrar_usuario(cpf)
    if not usuario:
        print("‚ùå Usu√°rio n√£o encontrado. Cadastre o usu√°rio antes.")
        return

    numero_conta = len(contas) + 1
    conta = {"agencia": AGENCIA, "numero": numero_conta, "usuario": usuario}
    contas.append(conta)
    print(f"‚úÖ Conta criada com sucesso! Ag√™ncia: {AGENCIA}, N√∫mero: {numero_conta}")

def menu():
    print("""
===== BANCO ABMS =====
[d] Depositar
[s] Sacar
[e] Extrato
[u] Cadastrar usu√°rio
[c] Criar conta
[q] Sair
""")

# Vari√°veis de conta corrente ativa (padr√£o)
saldo = 0
limite = 500
extrato = ""
numero_saques = 0

while True:
    menu()
    opcao = input("Escolha uma op√ß√£o: ").lower()

    if opcao == "d":
        valor = float(input("Informe o valor do dep√≥sito: "))
        saldo, extrato = depositar(saldo, valor, extrato)

    elif opcao == "s":
        valor = float(input("Informe o valor do saque: "))
        saldo, extrato, numero_saques = sacar(
            saldo=saldo,
            valor=valor,
            extrato=extrato,
            limite=limite,
            numero_saques=numero_saques
        )

    elif opcao == "e":
        exibir_extrato(saldo, extrato=extrato)

    elif opcao == "u":
        cadastrar_usuario()

    elif opcao == "c":
        cadastrar_conta()

    elif opcao == "q":
        print("üëã Obrigado por usar o Banco ABMS!")
        break

    else:
        print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")
